LED 

from gpiozero import LED

from time import time 

led=LED(17)

while True:

  led.on()

  sleep(1)

  led.off()

  sleep(1)

buzzer using raspberry pi and python program

//6,16 pins

import RPi.GPIO as GPIO

from time import sleep

GPIO.setwarnings(False)

GPIO.setmode(GPIO.BCM)

buzzer = 23

GPIO.setup(buzzer,GPIO.OUT)

while True:

  GPIO.output(buzzer,GPIO.HIGH)

  print("Beep")

  sleep(0.5)

  GPIO.output(buzzer,GPIO.LOW)

  print("No Beep")

  sleep(0.5)

//python3 buzzer.py

pushButton using raspberry pi and python program

import RPi.GPIO as GPIO

GPIO.setwarnings(False)

GPIO.setmode(GPIO.BOARD)

GPIO.setup(10,GPIO.IN,pull_up_down=GPIO.PUD_DOWN)

GPIO.add_even_detect(10,GPIO.RISING,callback=button_callback)

message = input("press enter to quit\n\n");

GPIO.cleanup()

//traffic lights using longestDecreasingSubsequence

//Red 22;Amber 27; Green 17

//above are GP VALUES

//9,kinda vi anni

from gpiozero import LED

red = LED(22)

amber = LED(27)

green = LED(17)

while True:

  red.on()

  sleep(1)

  amber.on()

  sleep(1)

  green.on()

  sleep(1)

  red.off()

  sleep(1)

  amber.off()

  sleep(1)

  green.off()

//use python file.py to run the program

//output:lights will blink alternatively

//DHT11/DHT22

import RPi.GPIO as GPIO

import dht11

# initialize GPIO

GPIO.setwarnings(False)

GPIO.setmode(GPIO.BCM)

GPIO.cleanup()

# read data using pin 14

instance = dht11.DHT11(pin = 14)

result = instance.read()

if result.is_valid():

print("Temperature: %-3.1f C" % 

result.temperature)

print("Humidity: %-3.1f %%" % 

result.humidity)

else:

print("Error: %d" % result.error_code)
